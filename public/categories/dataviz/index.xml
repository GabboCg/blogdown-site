<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DataViz on </title>
    <link>/categories/dataviz/</link>
    <description>Recent content in DataViz on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 08 Feb 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/dataviz/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Economic data in motion</title>
      <link>/posts/economic-data-in-motion/</link>
      <pubDate>Fri, 08 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/posts/economic-data-in-motion/</guid>
      <description>if(!require(&amp;quot;pacman&amp;quot;)) install.packages(&amp;quot;pacman&amp;quot;)## Loading required package: pacmanp_load(&amp;quot;tidyverse&amp;quot;, &amp;quot;tidyquant&amp;quot;, &amp;quot;gganimate&amp;quot;, &amp;quot;bbplot&amp;quot;)tickers &amp;lt;- c(&amp;quot;LRHUTTTTFRM156S&amp;quot;,&amp;quot;LRHUTTTTDEM156S&amp;quot;,&amp;quot;LRHUTTTTUSM156S&amp;quot;,&amp;quot;LRHUTTTTJPM156S&amp;quot;)countries_name &amp;lt;- c(&amp;quot;France&amp;quot;, &amp;quot;Germany&amp;quot;, &amp;quot;United States&amp;quot;, &amp;quot;Japan&amp;quot;)unemployment_lst &amp;lt;- list()for(i in seq_along(tickers)) {unemployment_lst[[i]] &amp;lt;- tq_get(tickers[i],get = &amp;quot;economic.data&amp;quot;,from = &amp;quot;2000-01-01&amp;quot;,to = &amp;quot;2018-11-01&amp;quot;) %&amp;gt;%mutate(symbol = countries_name[i])}unemployment_tbl &amp;lt;- do.</description>
    </item>
    
    <item>
      <title>Road to oscars 2019</title>
      <link>/posts/road-to-oscars-2019/</link>
      <pubDate>Mon, 04 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/posts/road-to-oscars-2019/</guid>
      <description>if(!require(&amp;quot;pacman&amp;quot;)) install.packages(&amp;quot;pacman&amp;quot;)p_load(&amp;quot;tidyverse&amp;quot;, &amp;quot;rvest&amp;quot;, &amp;quot;bbplot&amp;quot;, &amp;quot;ggalt&amp;quot;)oscar_movies &amp;lt;- read_html(&amp;quot;https://www.imdb.com/list/ls023438886/?st_dt=&amp;amp;mode=detail&amp;amp;page=1&amp;amp;ref_=ttls_vm_dtl&amp;amp;sort=list_order,asc&amp;quot;)matrix_value &amp;lt;- matrix(0, nrow = 36, ncol = 4)colnames(matrix_value) &amp;lt;- c(&amp;quot;movie_name&amp;quot;, &amp;quot;date&amp;quot;, &amp;quot;imdb_score&amp;quot;, &amp;quot;metacritic_score&amp;quot;)for(i in 1:36){seudo_link &amp;lt;- &amp;quot;#main &amp;gt; div &amp;gt; div.lister.list.detail.sub-list &amp;gt; div.lister-list &amp;gt; div:nth-child&amp;quot;selector &amp;lt;- c(&amp;quot;a&amp;quot;, &amp;quot;span.lister-item-year.text-muted.unbold&amp;quot;)for(j in 1:2){matrix_value[i,j] &amp;lt;- oscar_movies %&amp;gt;% html_nodes(paste0(seudo_link,&amp;quot;(&amp;quot;,i,&amp;quot;) &amp;quot;,&amp;quot;&amp;gt; div.</description>
    </item>
    
  </channel>
</rss>