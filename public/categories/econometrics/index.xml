<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Econometrics on </title>
    <link>/categories/econometrics/</link>
    <description>Recent content in Econometrics on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 23 Feb 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/econometrics/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Replicate research studies for knowledge development</title>
      <link>/teaching/replicate-research-studies-for-knowledge-development/</link>
      <pubDate>Sat, 23 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/teaching/replicate-research-studies-for-knowledge-development/</guid>
      <description>Forecasting stock returns Forecasting stock returns (Rapach and Zhou, 2013)
 Download data.xlsx
 Monthly U.S. equity premium out-of-sample forecasting results based on individual economic variables with unrestricted and Predictive regression forecasts with Campbell and Thompson (2008).
 Download R code.xlsx  View post
  International Stock-Return Predictability (Rapach, Strauss and Zhou, 2013)
 Download data.xlsx
 Benchmark predictive regression model estimation from 1980:02 to 2010:12. The countries are Australia, Canada, France, Germany, Italy, Japan, Netherlands, Sweden, Switzerland, United Kingdom and United States.</description>
    </item>
    
    <item>
      <title>Loops using R</title>
      <link>/posts/loops-using-r/</link>
      <pubDate>Sun, 24 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/posts/loops-using-r/</guid>
      <description>IntroductionIntroductionthis post has the intentionality to present briefly one of the property that exist in a ordinary square regression.
if(!require(&amp;quot;pacman&amp;quot;)) install.packages(&amp;quot;pacman&amp;quot;)## Loading required package: pacmanp_load(&amp;quot;tidyverse&amp;quot;,&amp;quot;gridExtra&amp;quot;)set.seed(123)reps &amp;lt;- 10000betas &amp;lt;- matrix(NA, nrow = reps, ncol = 2)beta0 &amp;lt;- 2beta1 &amp;lt;- 2.5beta2 &amp;lt;- 1su = 2n = c(100,1000) #tama√±o muestralfor (j in 1:length(n)) {X1=rnorm(n[j],20,1)X2=runif(n[j],0,1)for (i in 1:reps) {u &amp;lt;- rnorm(n[j],0,su)Y &amp;lt;- beta0 + beta1*X1 + beta2*X2 + umodel = lm(Y~X1) #Estima OLS - omite variable X2betas[i,j] = model$coef[2]}}mean(betas[,1])## [1] 2.</description>
    </item>
    
  </channel>
</rss>